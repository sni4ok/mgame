//autogenerated by plaza_templater

#pragma once
#pragma pack(push, 4)

const char* cfg_cli_trades = "p2repl://FORTS_DEALS_REPL;scheme=|FILE|scheme/trades.ini|CustReplScheme";

namespace FORTS_DEALS_REPL
{ 
namespace CustReplScheme
{
    struct deal
    {
        static constexpr uint32_t plaza_size = 124;
        int64_t replID;
        int64_t replRev;
        int64_t replAct;
        int32_t sess_id;
        int32_t isin_id;
        int64_t id_deal;
        int64_t xpos;
        int64_t xamount;
        int64_t public_order_id_buy;
        int64_t public_order_id_sell;
        cg_decimal<16,5> price;
        cg_time_t moment;
        uint64_t moment_ns;
        int8_t nosystem;
        int64_t xstatus_buy;
        int64_t xstatus_sell;
        void print_brief() {
            mlog() << "deal|" << replID << "|" << replRev << "|" << replAct << "|" << sess_id << "|" << isin_id << "|"
               << id_deal << "|" << xpos << "|" << xamount << "|" << public_order_id_buy << "|" << public_order_id_sell << "|"
               << price << "|" << moment << "|" << moment_ns << "|" << nosystem << "|" << xstatus_buy << "|"
               << xstatus_sell << "|";
        }
    };
    static_assert(sizeof(deal) == 124, "deal");
    struct heartbeat
    {
        static constexpr uint32_t plaza_size = 34;
        int64_t replID;
        int64_t replRev;
        int64_t replAct;
        cg_time_t server_time;
        void print_brief() {
            mlog() << "heartbeat|" << replID << "|" << replRev << "|" << replAct << "|" << server_time << "|";
        }
    };
    static_assert(sizeof(heartbeat) == 36, "heartbeat");
}}
using FORTS_DEALS_REPL::CustReplScheme::deal;
using FORTS_DEALS_REPL::CustReplScheme::heartbeat;
#pragma pack(pop)

